### Build commands for use in recipes

COMPILE_CMD = $(CC) -I$(SRC) -I$(GENSRC) $(CFLAGS) $(OPT_CFLAGS) $(DBG_CFLAGS) $(CFLAGS_$(notdir $@)) $< -o $@
LINK_CMD = $(LD) -o $@ $(LDFLAGS) $^ $(LDLIBS) $(LDLIBS_$(notdir $@))
LEX_CMD = $(LEX) -t $< > $@
YACC_CMD = $(YACC) -d -o $(PARSER) $<

PARSER_H = $(patsubst %.c,%.h,$(PARSER))

$(TARGET): $(addprefix $(BUILDDIR)/,$(TARGET))
	@$(CP) $^ $(TOPDIR)

## Compilation and linking

# Compile C source into object files
$(OBJFILES):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Compiling $(notdir $<)
	@$(ECHO) '$(COMPILE_CMD)' > $@.cmdline
	@$(COMPILE_CMD) 2> $@.log || true
	@[ -s $@.log ] || $(RM) $@.log
	@$(CAT) 2> /dev/null $@.log || true
	@[ ! -e $@.log ]

# Link object files into the target executable(s)
$(addprefix $(BUILDDIR)/,$(TARGET)):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Linking $(notdir $@)
	@$(ECHO) '$(LINK_CMD)' > $@.cmdline
	@$(LINK_CMD) 2> $@.log || true
	@[ -s $@.log ] || $(RM) $@.log
	@$(CAT) 2> /dev/null $@.log || true
	@[ ! -e $@.log ]

## Generated source

# A tokeniser built with $(LEX)
$(LEXER):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Generating $(notdir $@)
	@$(ECHO) '$(LEX_CMD)' > $@.cmdline
	@$(LEX_CMD)

# A syntax analyser built with $(YACC)
$(PARSER) $(PARSER_H):
	@$(MKDIR) $(dir $@)
	@$(ECHO) Generating $(notdir $(PARSER)), $(notdir $(PARSER_H))
	@$(ECHO) '$(YACC_CMD)' > $@.cmdline
	@$(YACC_CMD) 2> $@.log || true
	@[ -s $@.log ] || $(RM) $@.log
	@$(CAT) 2> /dev/null $@.log || true
	@[ ! -e $@.log ]
